# Use the .NET 6 SDK image as the base image
FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build

# Set the working directory inside the container
WORKDIR /app

# Copy the .NET project files and restore dependencies
COPY *.sln .
COPY AccountsApi/AccountsApi.csproj ./AccountsApi/
COPY Context/Context.csproj ./Context/
COPY Core/Core.csproj ./Core/
COPY core.tests/core.tests.csproj ./core.tests/
COPY Domain/Domain.csproj ./Domain/
COPY Extensions/Extensions.csproj ./Extensions/
COPY Infrastructure/Infrastructure.csproj ./Infrastructure/
COPY Tests/Tests.csproj ./Tests/
COPY UnitTesting/UnitTesting.csproj ./UnitTesting/

# Restore dependencies for all projects in the solution
RUN dotnet restore

# Copy the entire solution
COPY . .

# Build the solution
RUN dotnet build -c Release --no-restore

# Publish the web API project
RUN dotnet publish -c Release -o out --no-restore --no-build ./AccountsApi/AccountsApi.csproj

# Set the runtime base image
FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS runtime

# Set the working directory inside the container
WORKDIR /app

# Copy the published output from the build stage
COPY --from=build /app/AccountsApi/out ./

# Expose the desired port
EXPOSE 80

# Set the entry point for the container
ENTRYPOINT ["dotnet", "AccountsApi.dll"]
